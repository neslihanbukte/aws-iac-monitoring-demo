---
- name: Deploy Flask App and Monitoring
  hosts: flask_servers
  vars:
    ansible_python_interpreter: /usr/bin/python
  become: true

  tasks:

    # Flask kurulumu
    - name: Install python3 and pip
      dnf:
        name:
          - python3
          - python3-pip
        state: present

    - name: Install Flask
      pip:
        name: flask
        executable: pip3

    - name: Copy Flask app
      copy:
        src: ./flask-app/app.py
        dest: /home/ec2-user/app.py
        owner: ec2-user
        mode: '0755'

    - name: Create systemd service for Flask app
      copy:
        dest: /etc/systemd/system/flask-app.service
        content: |
          [Unit]
          Description=Flask App
          After=network.target

          [Service]
          User=ec2-user
          WorkingDirectory=/home/ec2-user
          ExecStart=/usr/bin/python3 /home/ec2-user/app.py
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: true

    - name: Enable and start flask-app service
      systemd:
        name: flask-app
        enabled: true
        state: started

    # Node Exporter kurulumu
    - name: Install required packages for Node Exporter
      dnf:
        name: "{{ item }}"
        state: present
      loop:
        - wget
        - tar

    - name: Download Node Exporter
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.8.0/node_exporter-1.8.0.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz

    - name: Extract Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: true

    - name: Move Node Exporter binary
      command: mv /opt/node_exporter-1.8.0.linux-amd64/node_exporter /usr/local/bin/
      args:
        creates: /usr/local/bin/node_exporter

    - name: Create node_exporter systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=nobody
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=default.target

    - name: Reload systemd again (for node_exporter)
      systemd:
        daemon_reload: true

    - name: Enable and start node_exporter
      systemd:
        name: node_exporter
        enabled: true
        state: started

    # Grafana kurulumu
    - name: Add Grafana RPM key
      rpm_key:
        key: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana YUM repository (manually)
      copy:
        dest: /etc/yum.repos.d/grafana.repo
        content: |
          [grafana]
          name=Grafana OSS
          baseurl=https://packages.grafana.com/oss/rpm
          repo_gpgcheck=1
          enabled=1
          gpgcheck=1
          gpgkey=https://packages.grafana.com/gpg.key

    - name: Install Grafana
      dnf:
        name: grafana
        state: present

    - name: Enable and start Grafana service
      systemd:
        name: grafana-server
        enabled: true
        state: started
